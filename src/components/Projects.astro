---
import Card from "./Card/index.astro";
---

<Card colSpan="md:col-span-3" rowSpan="md:row-span-2" title="Projects">
  <div class="grid grid-cols-3 gap-4">
    <!-- Left Section: Title and Description -->
    <div class="col-span-1">
      <p class="text-sm font-light">Here are my projects. Feel free to look around!</p>
    </div>

    <!-- Right Section: Carousel -->
    <div class="col-span-2">
      <div class="carousel flex gap-4 overflow-hidden relative">
        <!-- Carousel Navigation -->
        <button class="absolute left-0 z-10 p-2" id="prevButton">&#9664;</button>
        <button class="absolute right-0 z-10 p-2" id="nextButton">&#9654;</button>

        <!-- Project Cards -->
        <div class="carousel-track flex transition-transform duration-300">
          <div class="carousel-card border p-4 rounded-lg shadow-md min-w-[250px]">
            <h3 class="text-xl font-bold">Project 1</h3>
            <p class="text-sm">Description of Project 1</p>
          </div>
          <div class="carousel-card border p-4 rounded-lg shadow-md min-w-[250px]">
            <h3 class="text-xl font-bold">Project 2</h3>
            <p class="text-sm">Description of Project 2</p>
          </div>
          <div class="carousel-card border p-4 rounded-lg shadow-md min-w-[250px]">
            <h3 class="text-xl font-bold">Project 3</h3>
            <p class="text-sm">Description of Project 3</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</Card>

<script>
  let currentSlide = 0;
  document.addEventListener('DOMContentLoaded', () => {
    const track = document.querySelector<HTMLElement>('.carousel-track');
    const cards = document.querySelectorAll<HTMLElement>('.carousel-card');
    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');

    if (!track || !prevButton || !nextButton) {
      console.error('Required elements for the carousel are missing.');
      return;
    }

    prevButton.addEventListener('click', () => {
      currentSlide = (currentSlide - 1 + cards.length) % cards.length;
      updateCarousel(track, cards);
    });

    nextButton.addEventListener('click', () => {
      currentSlide = (currentSlide + 1) % cards.length;
      updateCarousel(track, cards);
    });
  });

  function updateCarousel(track: HTMLElement, cards: NodeListOf<HTMLElement>) {
    const cardWidth = cards[0]?.offsetWidth + 16; // Adjust for margin
    if (track) {
      track.style.transform = `translateX(-${currentSlide * cardWidth}px)`;
    }
  }
</script>