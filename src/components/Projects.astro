---
import Card from "../components/Card/index.astro";
import NestedCard from "../components/Card/NestedCard.astro";
import ProyectLayout from "../layouts/ProyectLayout.astro";
import AnalogSynth from "./ProjectCards/AnalogSynth.astro";
import AutonomousRCCar from "./ProjectCards/AutonomousRCCar.astro";
import GuitarPedal from "./ProjectCards/GuitarPedal.astro";
import MindspringProject from "./ProjectCards/MindspringProject.astro";
import NeuroExoProject from "./ProjectCards/NeuroExoProject.astro";
import PLEGSProject from "./ProjectCards/PLEGSProject.astro";
import PurdueREU from "./ProjectCards/PurdueREU.astro";
import RiceREU from "./ProjectCards/RiceREU.astro";
import SoftExoProject from "./ProjectCards/SoftExoProject.astro";
import SolioMatlabApp from "./ProjectCards/SolioMatlabApp.astro";
import TextGame from "./ProjectCards/TextGame.astro";
import VoyagerDecoder from "./ProjectCards/VoyagerDecoder.astro";
---

<!-- The “Projects” card that expands to reveal the filter bar + sub-projects -->
<Card
  title="Projects"
  colSpan="md:col-span-3"
  rowSpan="md:row-span-2"
  body="Explore my projects in robotics, embedded systems, and more. Click to expand and see the full list!"
  expandable={true}
>
  <div slot="expanded">
    <!-- Filter Bar -->
    <div class="skills-filter mb-4 space-x-2 top-[10px]">
      <button class="filter-btn active" data-skill="All">All</button>
      <button class="filter-btn" data-skill="Robotics">Robotics</button>
      <button class="filter-btn" data-skill="Embedded">Embedded</button>
      <button class="filter-btn" data-skill="Exoskeleton">Exoskeleton</button>
      <button class="filter-btn" data-skill="C++">C++</button>
      <button class="filter-btn" data-skill="C">C</button>
      <button class="filter-btn" data-skill="3D Printing">3D Printing</button>
      <button class="filter-btn" data-skill="WebDev">WebDev</button>
      <button class="filter-btn" data-skill="MATLAB">MATLAB</button>
      <button class="filter-btn" data-skill="Research">Research</button>
      <button class="filter-btn" data-skill="Electronics">Electronics</button>
    </div>
    <!-- Projects Layout -->
    <ProyectLayout title="Projects" description="">
      <main class="relative text-white m-auto p-5 grid gap-4 max-w-6xl sm:grid-cols-8 lg:grid-cols-4">
        <AnalogSynth />
        <AutonomousRCCar />
        <GuitarPedal />
        <MindspringProject />
        <NeuroExoProject />
        <PLEGSProject />
        <PurdueREU />
        <RiceREU />
        <SoftExoProject />
        <SolioMatlabApp />
        <TextGame />
        <VoyagerDecoder />      
      </main>
    </ProyectLayout>
  </div>
</Card>

<!-- Filter logic & styling -->
<style is:global>
  .filter-btn {
    opacity: 0.6;
    background: #333;
    color: #fff;
    border: 1px solid #444;
    padding: 6px 12px;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .filter-btn:hover {
    opacity: 1;
  }

  .filter-btn.active {
    background: #fff;
    color: #000;
    opacity: 1 !important;
  }

  /* Position the close button in the top-right of the expanded area */
  .close-btn {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background: none;
    border: none;
    color: #fff;
    font-size: 1.25rem;
    cursor: pointer;
    z-index: 10;
  }

  .close-btn:hover {
    opacity: 0.7;
  }
</style>

<script>
  let activeSkills: string[] = [];

  document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll(".filter-btn");
    const subCards = document.querySelectorAll(".sub-card");

    function filterProjects() {
      if (activeSkills.length === 0) {
        subCards.forEach((card) => ((card as HTMLElement).style.display = "block"));
        document.querySelector("[data-skill='all']")?.classList.add("active");
      } else {
        document.querySelector("[data-skill='all']")?.classList.remove("active");
        subCards.forEach((card) => {
          const el = card as HTMLElement;
          const cardSkills = el.getAttribute("--inline-data-skills")?.split(" ") || [];
          const match = activeSkills.some((sk) => cardSkills.includes(sk));
          el.style.display = match ? "block" : "none";
        });
      }
    }

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const skill = (btn as HTMLElement).dataset.skill;
        if (!skill) return;

        if (skill === "all") {
          activeSkills = [];
          buttons.forEach((b) => b.classList.remove("active"));
          (btn as HTMLElement).classList.add("active");
          filterProjects();
        } else {
          if (activeSkills.includes(skill)) {
            activeSkills = activeSkills.filter((s) => s !== skill);
            (btn as HTMLElement).classList.remove("active");
          } else {
            activeSkills.push(skill);
            (btn as HTMLElement).classList.add("active");
          }
          filterProjects();
        }
      });
    });
  });
</script>
